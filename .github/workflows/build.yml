name: Build AMBuild Plugin

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    permissions:
      contents: write
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/pisex/ubuntu20:latest

    env:
      HL2SDK_ROOT: "${{ github.workspace }}/external"
      MMS_PATH: "${{ github.workspace }}/external/metamod-source"
      MANIFEST_PATH: "${{ github.workspace }}/external/metamod-source/hl2sdk-manifests"

    steps:
      - name: Generate build number
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        id: buildnumber
        uses: onyxmueller/build-tag-number@v1
        with:
          token: ${{secrets.github_token}}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up dependencies
        run: |
          export DEBIAN_FRONTEND=noninteractive
          apt-get update -qy
          apt-get install -y git clang-10 clang++-10 binutils python3 python3-pip zip

          python3 -m pip install --upgrade pip importlib-metadata
          python3 -m pip install setuptools==45.2.0

          git clone https://github.com/alliedmodders/ambuild.git ambuild
          cd ambuild
          pip3 install .
          cd ..

          mkdir -p external
          cd external
          git clone --recursive --branch master --single-branch \
            https://github.com/alliedmodders/metamod-source.git
          git clone --recursive --branch cs2 --single-branch \
            https://github.com/alliedmodders/hl2sdk.git hl2sdk-cs2
            
          cd ../..

          git clone https://github.com/pisex/SchemaEntity.git
          
      - name: Configure and build plugin
        run: |
          mkdir build
          cd build
          python3 ../configure.py -s cs2 --targets x86_64 --enable-optimize --hl2sdk-manifests=./hl2sdk-manifests --mms_path=$MMS_PATH --hl2sdk-root=$HL2SDK_ROOT
          ambuild

      - name: Package addon into ZIP
        run: |
          cd build/package/addons
          zip -r "${{ github.event.repository.name }}.zip" .
          mv "${{ github.event.repository.name }}.zip" "${GITHUB_WORKSPACE}/"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.head_commit.message }}
          files: ${{ github.workspace }}/${{ github.event.repository.name }}.zip